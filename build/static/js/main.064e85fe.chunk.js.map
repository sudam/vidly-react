{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","services/movieService.js","services/genreService.js","components/movies.jsx","utils/paginate.js","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/footer.jsx","components/loginForm.jsx","components/logout.jsx","services/userService.jsx","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","_callee","email","password","_ref","regenerator_default","a","wrap","_context","prev","next","http","sent","data","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","this","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","createElement","className","_this2","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","createKey","_id","_this$props","Table","tableHeader","tableBody","Like","classes","liked","Fragment","style","cursor","aria-hidden","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","Link","to","concat","title","like","onLike","deleteColumn","auth","onDelete","user","isAdmin","push","movies","table","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","aria-label","page","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","movieUrl","id","getMovie","movieId","saveMovie","body","getGenres","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","t0","handleLike","toConsumableArray","index","indexOf","handlePageChanged","handleGenereSelect","genre","handleSearch","query","handleSort","getPageData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPageData","listGroup","marginBottom","searchBox","moviesTable","pagination","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_input","common_select","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","NavLink","Footer","href","target","LoginForm","username","location","window","from","pathname","Redirect","Logout","RegisterForm","ProtectedRoute","component","render","Route","App","lib","navBar","Switch","protectedRoute","components_movies","exact","footer","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.064e85fe.chunk.js","sourcesContent":["function init(){    \r\n}\r\n\r\nfunction log(error){\r\n    console.error(error);\r\n}\r\n\r\nexport default {\r\n    init, \r\n    log\r\n};","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occurred.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label}\r\n              {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\n\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  classes += !props.liked ? \"-o\" : \"\";\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span>\r\n        <i\r\n          onClick={props.onClick}\r\n          style={{ cursor: \"pointer\" }}\r\n          className={classes}\r\n          aria-hidden=\"true\"\r\n        />\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie =>\r\n      auth.getCurrentUser && (\r\n        <button\r\n          onClick={() => this.props.onDelete(movie)}\r\n          className=\"btn btn-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColumn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = props => {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  if (pagesCount == 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <nav aria-label=\"Page navigation example\">\r\n        <ul className=\"pagination\">\r\n          {pages.map(page => (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n            >\r\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                {page}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = props => {\r\n  const {\r\n    items,\r\n    textProperty,\r\n    valueProperty,\r\n    selectedItem,\r\n    onItemSelect\r\n  } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <ul className=\"list-group\">\r\n          {items.map(item => (\r\n            <li\r\n              onClick={() => onItemSelect(item)}\r\n              key={item[valueProperty]}\r\n              className={\r\n                item === selectedItem\r\n                  ? \"list-group-item active\"\r\n                  : \"list-group-item\"\r\n              }\r\n            >\r\n              {item[textProperty]}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  http.delete(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted.\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChanged = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenereSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn } = this.state;\r\n    const { user } = this.props;\r\n\r\n    // if (count === 0) return <p>There are no movies in the database.</p>;\r\n\r\n    const { totalCount, data: movies } = this.getPageData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-2\">\r\n            <ListGroup\r\n              items={this.state.genres}\r\n              selectedItem={this.state.selectedGenre}\r\n              onItemSelect={this.handleGenereSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {user && (\r\n              <Link\r\n                to=\"/movies/new\"\r\n                className=\"btn btn-primary newmovie\"\r\n                style={{ marginBottom: 20 }}\r\n              >\r\n                New Movie\r\n              </Link>\r\n            )}\r\n\r\n            <p>Showing {totalCount} movies in the database.</p>\r\n\r\n            <SearchBox value={this.searchQuery} onChange={this.handleSearch} />\r\n\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChanged}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return _(items).slice(startIndex).take(pageSize).value();\r\n}","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"./not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"NumberInStock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  Logout\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer mt-auto py-3\">\r\n      <div className=\"container\">\r\n        <span className=\"text-muted\">\r\n          Imaginary video rental application -{\" \"}\r\n          <a href=\"https://github.com/sudam/vidly-react\" target=\"_blank\">\r\n            GitHub Project\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\nimport * as userService from \"../services/userService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\")\r\n      .email(),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n      .min(5),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport MovieForm from \"./components/movieForm\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport Footer from \"./components/footer\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport RegisterForm from \"./components/registerForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}